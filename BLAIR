-- MADE BY JIWOO
local Lighting = game:GetService("Lighting")

-- Function to create a label above an object with slightly larger text
local function createLabelWithLargerText(object, labelText, textColor)
    if object then
        local billboardGui = Instance.new("BillboardGui")
        local textLabel = Instance.new("TextLabel")

        billboardGui.Adornee = object
        billboardGui.Size = UDim2.new(0, 100, 0, 50) -- Adjusted size for BillboardGui
        billboardGui.StudsOffset = Vector3.new(0, 3, 0) -- Position above the object
        billboardGui.AlwaysOnTop = true -- Ensure it is always visible

        textLabel.Parent = billboardGui
        textLabel.Size = UDim2.new(1, 0, 1, 0) -- Fill the BillboardGui
        textLabel.BackgroundTransparency = 1 -- Make the background transparent
        textLabel.Text = labelText
        textLabel.TextColor3 = textColor
        textLabel.TextScaled = false
        textLabel.Font = Enum.Font.SourceSans
        textLabel.TextSize = 10 -- Set the text size

        billboardGui.Parent = object
    else
        warn("Object not found for label: " .. tostring(labelText))
    end
end

-- Ghost Highlight Loop
local function maintainGhostHighlight()
    while true do
        wait(0.5) -- Wait for a short duration to prevent a tight loop
        local ghostHighlight = workspace:FindFirstChild("Ghost") and workspace.Ghost:FindFirstChild("Highlight")
        if ghostHighlight then
            ghostHighlight.Enabled = true -- Continuously set highlight to enabled
        end
    end
end

-- Start the highlight maintenance in a separate coroutine
coroutine.wrap(maintainGhostHighlight)()

-- Create labels with larger text for specific objects
local function createLabels()
    local objects = {
        {name = "Ouija Board", path = workspace, color = Color3.fromRGB(218, 165, 32), label = "Ouija"}, -- Bright Brown
        {name = "SummoningCircle", path = workspace, color = Color3.fromRGB(255, 0, 0), label = "Summoning Circle"}, -- Bright Red
        {name = "Tarot Cards", path = workspace.Map.Items, color = Color3.fromRGB(148, 0, 211), label = "Tarot"}, -- Bright Purple
    }

    -- Create labels for predefined objects
    for _, obj in ipairs(objects) do
        local foundObject = obj.path:FindFirstChild(obj.name)
        if foundObject then
            createLabelWithLargerText(foundObject, obj.label, obj.color)
        else
            warn("Object not found: " .. obj.name)
        end
    end

    -- Create a label for GeneratorMesh
    local generatorMesh = workspace.Map.Generators:FindFirstChild("GeneratorMesh")
    if generatorMesh then
        createLabelWithLargerText(generatorMesh, "Generator", Color3.fromRGB(255, 255, 255)) -- White color
    else
        warn("GeneratorMesh not found in workspace.Map.Generators")
    end
end

-- Create labels for the specified objects
createLabels()

-- FullBright Functionality
if not _G.FullBrightExecuted then
    _G.FullBrightExecuted = true
    _G.FullBrightEnabled = false

    -- Store normal lighting settings
    _G.NormalLightingSettings = {
        Brightness = Lighting.Brightness,
        ClockTime = Lighting.ClockTime,
        FogEnd = Lighting.FogEnd,
        GlobalShadows = Lighting.GlobalShadows,
        Ambient = Lighting.Ambient
    }

    -- Set default lighting values
    Lighting.FogEnd = 786543
    Lighting.Brightness = 1
    Lighting.ClockTime = 12
    Lighting.GlobalShadows = false
    Lighting.Ambient = Color3.fromRGB(178, 178, 178)

    -- Reset Lighting properties when FullBright is disabled
    local function resetProperties()
        Lighting.Brightness = _G.NormalLightingSettings.Brightness
        Lighting.ClockTime = _G.NormalLightingSettings.ClockTime
        Lighting.FogEnd = _G.NormalLightingSettings.FogEnd
        Lighting.GlobalShadows = _G.NormalLightingSettings.GlobalShadows
        Lighting.Ambient = _G.NormalLightingSettings.Ambient
    end

    -- Monitor Lighting property changes
    Lighting:GetPropertyChangedSignal("Brightness"):Connect(function()
        if Lighting.Brightness ~= 1 then
            repeat wait() until _G.FullBrightEnabled
            Lighting.Brightness = 1
        end
    end)

    Lighting:GetPropertyChangedSignal("ClockTime"):Connect(function()
        if Lighting.ClockTime ~= 12 then
            repeat wait() until _G.FullBrightEnabled
            Lighting.ClockTime = 12
        end
    end)

    Lighting:GetPropertyChangedSignal("FogEnd"):Connect(function()
        if Lighting.FogEnd ~= 786543 then
            repeat wait() until _G.FullBrightEnabled
            Lighting.FogEnd = 786543
        end
    end)

    Lighting:GetPropertyChangedSignal("GlobalShadows"):Connect(function()
        if Lighting.GlobalShadows ~= false then
            repeat wait() until _G.FullBrightEnabled
            Lighting.GlobalShadows = false
        end
    end)

    Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
        if Lighting.Ambient ~= Color3.fromRGB(178, 178, 178) then
            repeat wait() until _G.FullBrightEnabled
            Lighting.Ambient = Color3.fromRGB(178, 178, 178)
        end
    end)

    -- Set Atmosphere density to 0 for existing instances
    for _, v in ipairs(Lighting:GetDescendants()) do
        if v:IsA("Atmosphere") then
            v.Density = 0
            v:GetPropertyChangedSignal("Density"):Connect(function()
                v.Density = 0
            end)
        end
    end

    -- Handle new Atmosphere instances added to Lighting
    Lighting.DescendantAdded:Connect(function(v)
        if v:IsA("Atmosphere") then
            v.Density = 0
            v:GetPropertyChangedSignal("Density"):Connect(function()
                v.Density = 0
            end)
        end
    end)

    -- Toggle FullBright functionality
    local LatestValue = true
    spawn(function()
        repeat wait() until _G.FullBrightEnabled
        while wait() do
            if _G.FullBrightEnabled ~= LatestValue then
                if not _G.FullBrightEnabled then
                    resetProperties()
                else
                    Lighting.Brightness = 1
                    Lighting.ClockTime = 12
                    Lighting.FogEnd = 786543
                    Lighting.GlobalShadows = false
                    Lighting.Ambient = Color3.fromRGB(178, 178, 178)
                end
                LatestValue = not LatestValue
            end
        end
    end)
end

-- Toggle the FullBright functionality
_G.FullBrightEnabled = not _G.FullBrightEnabled
